{"ast":null,"code":"import AuthService from '../services/AuthService';\nclass OrderModel {\n  async getOrders() {\n    try {\n      const response = await fetch('http://localhost:5000/api/orders', {\n        headers: {\n          Authorization: `Bearer ${localStorage.getItem('accessToken')}`\n        }\n      });\n      const result = await response.json();\n      if (result.success) {\n        return result.orders;\n      } else if (result.expired) {\n        const refreshResult = await AuthService.refreshToken();\n        if (refreshResult.success) {\n          // Thử lại với token mới\n          const retryResponse = await fetch('http://localhost:5000/api/orders', {\n            headers: {\n              Authorization: `Bearer ${localStorage.getItem('accessToken')}`\n            }\n          });\n          const retryResult = await retryResponse.json();\n          if (retryResult.success) {\n            return retryResult.orders;\n          }\n          throw new Error(retryResult.message || 'Không thể tải đơn hàng.');\n        }\n        throw new Error('Phiên đăng nhập hết hạn.');\n      }\n      throw new Error(result.message || 'Không thể tải đơn hàng.');\n    } catch (error) {\n      console.error('OrderModel getOrders error:', error);\n      throw error;\n    }\n  }\n  async getAddressCount(userId) {\n    try {\n      const response = await fetch('http://localhost:5000/api/addresses', {\n        headers: {\n          Authorization: `Bearer ${localStorage.getItem('accessToken')}`\n        }\n      });\n      const result = await response.json();\n      if (result.success) {\n        return result.addresses.length;\n      } else if (result.expired) {\n        const refreshResult = await AuthService.refreshToken();\n        if (refreshResult.success) {\n          const retryResponse = await fetch('http://localhost:5000/api/addresses', {\n            headers: {\n              Authorization: `Bearer ${localStorage.getItem('accessToken')}`\n            }\n          });\n          const retryResult = await retryResponse.json();\n          if (retryResult.success) {\n            return retryResult.addresses.length;\n          }\n          throw new Error(retryResult.message || 'Không thể tải danh sách địa chỉ.');\n        }\n        throw new Error('Phiên đăng nhập hết hạn.');\n      }\n      throw new Error(result.message || 'Không thể tải danh sách địa chỉ.');\n    } catch (error) {\n      console.error('OrderModel getAddressCount error:', error);\n      throw error;\n    }\n  }\n}\nexport default new OrderModel();","map":{"version":3,"names":["AuthService","OrderModel","getOrders","response","fetch","headers","Authorization","localStorage","getItem","result","json","success","orders","expired","refreshResult","refreshToken","retryResponse","retryResult","Error","message","error","console","getAddressCount","userId","addresses","length"],"sources":["D:/Hoang.bk/Documents/GitHub/HHSHOP/Frontend/src/models/OrderModel.js"],"sourcesContent":["import AuthService from '../services/AuthService';\r\n\r\nclass OrderModel {\r\n  async getOrders() {\r\n    try {\r\n      const response = await fetch('http://localhost:5000/api/orders', {\r\n        headers: { Authorization: `Bearer ${localStorage.getItem('accessToken')}` }\r\n      });\r\n      const result = await response.json();\r\n      if (result.success) {\r\n        return result.orders;\r\n      } else if (result.expired) {\r\n        const refreshResult = await AuthService.refreshToken();\r\n        if (refreshResult.success) {\r\n          // Thử lại với token mới\r\n          const retryResponse = await fetch('http://localhost:5000/api/orders', {\r\n            headers: { Authorization: `Bearer ${localStorage.getItem('accessToken')}` }\r\n          });\r\n          const retryResult = await retryResponse.json();\r\n          if (retryResult.success) {\r\n            return retryResult.orders;\r\n          }\r\n          throw new Error(retryResult.message || 'Không thể tải đơn hàng.');\r\n        }\r\n        throw new Error('Phiên đăng nhập hết hạn.');\r\n      }\r\n      throw new Error(result.message || 'Không thể tải đơn hàng.');\r\n    } catch (error) {\r\n      console.error('OrderModel getOrders error:', error);\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  async getAddressCount(userId) {\r\n    try {\r\n      const response = await fetch('http://localhost:5000/api/addresses', {\r\n        headers: { Authorization: `Bearer ${localStorage.getItem('accessToken')}` }\r\n      });\r\n      const result = await response.json();\r\n      if (result.success) {\r\n        return result.addresses.length;\r\n      } else if (result.expired) {\r\n        const refreshResult = await AuthService.refreshToken();\r\n        if (refreshResult.success) {\r\n          const retryResponse = await fetch('http://localhost:5000/api/addresses', {\r\n            headers: { Authorization: `Bearer ${localStorage.getItem('accessToken')}` }\r\n          });\r\n          const retryResult = await retryResponse.json();\r\n          if (retryResult.success) {\r\n            return retryResult.addresses.length;\r\n          }\r\n          throw new Error(retryResult.message || 'Không thể tải danh sách địa chỉ.');\r\n        }\r\n        throw new Error('Phiên đăng nhập hết hạn.');\r\n      }\r\n      throw new Error(result.message || 'Không thể tải danh sách địa chỉ.');\r\n    } catch (error) {\r\n      console.error('OrderModel getAddressCount error:', error);\r\n      throw error;\r\n    }\r\n  }\r\n}\r\n\r\nexport default new OrderModel();"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}