{"ast":null,"code":"import api from '../services/api';\nexport class Product {\n  constructor(data) {\n    this.id = data.id;\n    this.name = data.name;\n    this.price = data.price;\n    this.discountPrice = data.discountPrice || null;\n    this.image = data.image;\n    this.description = data.description;\n    this.types = data.types || [];\n    this.tag = data.tag || [];\n    this.brands = data.brands || [];\n    this.colors = data.colors || [];\n    this.titles = data.titles || [];\n    this.subTitles = data.subTitles || [];\n    this.falseSale = data.falseSale || false;\n  }\n}\nexport class ProductModel {\n  constructor() {\n    this.cache = new Map();\n  }\n  async _fetch(url) {\n    if (this.cache.has(url)) {\n      return this.cache.get(url);\n    }\n    try {\n      const response = await api.get(url);\n      const products = (response.data.products || []).map(p => new Product(p));\n      this.cache.set(url, products);\n      return products;\n    } catch (error) {\n      console.error('API Error:', error);\n      return [];\n    }\n  }\n  getAllProducts() {\n    return [...this.products];\n  }\n  getProductsByTitle(titlePath) {\n    return this.products.filter(product => product.titles.includes(titlePath));\n  }\n  getProductsBySubTitle(subTitlePath) {\n    return this.products.filter(product => product.subTitles.includes(subTitlePath));\n  }\n  getProductsByTag(tag) {\n    return this.products.filter(product => product.tag.includes(tag));\n  }\n  getProductsByType(type) {\n    return this.products.filter(product => product.types.includes(type));\n  }\n}\nexport default ProductModel; // Xuất instance","map":{"version":3,"names":["api","Product","constructor","data","id","name","price","discountPrice","image","description","types","tag","brands","colors","titles","subTitles","falseSale","ProductModel","cache","Map","_fetch","url","has","get","response","products","map","p","set","error","console","getAllProducts","getProductsByTitle","titlePath","filter","product","includes","getProductsBySubTitle","subTitlePath","getProductsByTag","getProductsByType","type"],"sources":["D:/Hoang.bk/Documents/GitHub/HHSHOP/Frontend/src/models/ProductModel.js"],"sourcesContent":["import api from '../services/api';\r\n\r\nexport class Product {\r\n  constructor(data) {\r\n    this.id = data.id;\r\n    this.name = data.name;\r\n    this.price = data.price;\r\n    this.discountPrice = data.discountPrice || null;\r\n    this.image = data.image;\r\n    this.description = data.description;\r\n    this.types = data.types || [];\r\n    this.tag = data.tag || [];\r\n    this.brands = data.brands || [];\r\n    this.colors = data.colors || [];\r\n    this.titles = data.titles || [];\r\n    this.subTitles = data.subTitles || [];\r\n    this.falseSale = data.falseSale || false;\r\n  }\r\n}\r\n\r\nexport class ProductModel {\r\n  constructor() {\r\n    this.cache = new Map();\r\n  }\r\n\r\n  async _fetch(url) {\r\n    if (this.cache.has(url)) {\r\n      return this.cache.get(url);\r\n    }\r\n    try {\r\n      const response = await api.get(url);\r\n      const products = (response.data.products || []).map(p => new Product(p));\r\n      this.cache.set(url, products);\r\n      return products;\r\n    } catch (error) {\r\n      console.error('API Error:', error);\r\n      return [];\r\n    }\r\n  }\r\n\r\n  getAllProducts() {\r\n    return [...this.products];\r\n  }\r\n\r\n  getProductsByTitle(titlePath) {\r\n    return this.products.filter(product => \r\n      product.titles.includes(titlePath)\r\n    );\r\n  }\r\n\r\n  getProductsBySubTitle(subTitlePath) {\r\n    return this.products.filter(product => \r\n      product.subTitles.includes(subTitlePath)\r\n    );\r\n  }\r\n\r\n  getProductsByTag(tag) {\r\n    return this.products.filter(product => \r\n      product.tag.includes(tag)\r\n    );\r\n  }\r\n\r\n  getProductsByType(type) {\r\n    return this.products.filter(product => \r\n      product.types.includes(type)\r\n    );\r\n  }\r\n}\r\n\r\nexport default ProductModel; // Xuất instance"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}