{"ast":null,"code":"// src/services/CartService.js\nimport CartModel from '../models/CartModel.js';\nimport api from './api';\nclass CartService {\n  constructor() {\n    this.localCart = new CartModel(JSON.parse(localStorage.getItem('cart')) || []);\n    this.isAuthenticated = false;\n    this.userId = null;\n  }\n  setAuth(isAuthenticated, userId) {\n    this.isAuthenticated = isAuthenticated;\n    this.userId = userId;\n  }\n  async syncWithServer() {\n    if (!this.isAuthenticated) return;\n    try {\n      const res = await api.get('/cart');\n      const serverItems = res.data.cart.items.map(item => ({\n        ...item.productId,\n        id: item.productId._id,\n        quantity: item.quantity,\n        displayPrice: item.productId.discountPrice || item.productId.price\n      }));\n      this.localCart = new CartModel(serverItems);\n      localStorage.setItem('cart', JSON.stringify(serverItems));\n    } catch (error) {\n      console.error('Lỗi đồng bộ giỏ hàng:', error);\n    }\n  }\n  async saveToServer(items) {\n    if (!this.isAuthenticated) return;\n    try {\n      const promises = items.map(item => api.post('/cart/add', {\n        productId: item.id,\n        quantity: item.quantity\n      }));\n      await Promise.all(promises);\n    } catch (error) {\n      console.error('Lỗi lưu giỏ hàng:', error);\n    }\n  }\n  addToCart(product) {\n    const updated = this.localCart.addItem(product);\n    localStorage.setItem('cart', JSON.stringify(updated));\n    this.saveToServer(updated);\n    return updated;\n  }\n  removeFromCart(productId) {\n    const updated = this.localCart.removeItem(productId);\n    localStorage.setItem('cart', JSON.stringify(updated));\n    if (this.isAuthenticated) {\n      api.delete(`/cart/remove/${productId}`).catch(() => {});\n    }\n    return updated;\n  }\n  updateQuantity(productId, quantity) {\n    const updated = this.localCart.updateQuantity(productId, quantity);\n    localStorage.setItem('cart', JSON.stringify(updated));\n    if (this.isAuthenticated) {\n      api.put('/cart/update', {\n        productId,\n        quantity\n      }).catch(() => {});\n    }\n    return updated;\n  }\n  clearCart() {\n    const updated = this.localCart.clear();\n    localStorage.setItem('cart', JSON.stringify(updated));\n    if (this.isAuthenticated) {\n      api.delete('/cart/clear').catch(() => {});\n    }\n    return updated;\n  }\n  getCartItems() {\n    return this.localCart.getItems();\n  }\n  getTotalPrice() {\n    return this.localCart.totalPrice;\n  }\n}\nexport default CartService;","map":{"version":3,"names":["CartModel","api","CartService","constructor","localCart","JSON","parse","localStorage","getItem","isAuthenticated","userId","setAuth","syncWithServer","res","get","serverItems","data","cart","items","map","item","productId","id","_id","quantity","displayPrice","discountPrice","price","setItem","stringify","error","console","saveToServer","promises","post","Promise","all","addToCart","product","updated","addItem","removeFromCart","removeItem","delete","catch","updateQuantity","put","clearCart","clear","getCartItems","getItems","getTotalPrice","totalPrice"],"sources":["D:/Hoang.bk/Documents/GitHub/HHSHOP/Frontend/src/services/CartService.js"],"sourcesContent":["// src/services/CartService.js\r\nimport CartModel from '../models/CartModel.js';\r\nimport api from './api';\r\n\r\nclass CartService {\r\n  constructor() {\r\n    this.localCart = new CartModel(JSON.parse(localStorage.getItem('cart')) || []);\r\n    this.isAuthenticated = false;\r\n    this.userId = null;\r\n  }\r\n\r\n  setAuth(isAuthenticated, userId) {\r\n    this.isAuthenticated = isAuthenticated;\r\n    this.userId = userId;\r\n  }\r\n\r\n  async syncWithServer() {\r\n    if (!this.isAuthenticated) return;\r\n    try {\r\n      const res = await api.get('/cart');\r\n      const serverItems = res.data.cart.items.map(item => ({\r\n        ...item.productId,\r\n        id: item.productId._id,\r\n        quantity: item.quantity,\r\n        displayPrice: item.productId.discountPrice || item.productId.price\r\n      }));\r\n      this.localCart = new CartModel(serverItems);\r\n      localStorage.setItem('cart', JSON.stringify(serverItems));\r\n    } catch (error) {\r\n      console.error('Lỗi đồng bộ giỏ hàng:', error);\r\n    }\r\n  }\r\n  async saveToServer(items) {\r\n    if (!this.isAuthenticated) return;\r\n    try {\r\n      const promises = items.map(item => \r\n        api.post('/cart/add', { productId: item.id, quantity: item.quantity })\r\n      );\r\n      await Promise.all(promises);\r\n    } catch (error) {\r\n      console.error('Lỗi lưu giỏ hàng:', error);\r\n    }\r\n  }\r\n\r\n  addToCart(product) {\r\n    const updated = this.localCart.addItem(product);\r\n    localStorage.setItem('cart', JSON.stringify(updated));\r\n    this.saveToServer(updated);\r\n    return updated;\r\n  }\r\n\r\n  removeFromCart(productId) {\r\n    const updated = this.localCart.removeItem(productId);\r\n    localStorage.setItem('cart', JSON.stringify(updated));\r\n    if (this.isAuthenticated) {\r\n      api.delete(`/cart/remove/${productId}`).catch(() => {});\r\n    }\r\n    return updated;\r\n  }\r\n\r\n  updateQuantity(productId, quantity) {\r\n    const updated = this.localCart.updateQuantity(productId, quantity);\r\n    localStorage.setItem('cart', JSON.stringify(updated));\r\n    if (this.isAuthenticated) {\r\n      api.put('/cart/update', { productId, quantity }).catch(() => {});\r\n    }\r\n    return updated;\r\n  }\r\n\r\n  clearCart() {\r\n    const updated = this.localCart.clear();\r\n    localStorage.setItem('cart', JSON.stringify(updated));\r\n    if (this.isAuthenticated) {\r\n      api.delete('/cart/clear').catch(() => {});\r\n    }\r\n    return updated;\r\n  }\r\n\r\n  getCartItems() {\r\n    return this.localCart.getItems();\r\n  }\r\n\r\n  getTotalPrice() {\r\n    return this.localCart.totalPrice;\r\n  }\r\n}\r\n\r\nexport default CartService;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}